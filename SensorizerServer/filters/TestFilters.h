#ifndef TEST_FILTERS_H
#define TEST_FILTERS_H

#include "OutputFilter.h"

#ifndef DEBUG_PRINT_NUMS
#include <stdio.h>

#define DEBUG_PRINT_NUMS(msg, num1, num2) printf("%s %f, %f\n", msg, num1, num2)

#endif


const double filtersTest_Values[] = {
0.0009765625,
0.0009765625,
0.0009765625,
0.0009765625,
0.0009765625,
0.0009765625,
0.0009765625,
0.0029296875,
0.0019531250,
0.0029296875,
0.0019531250,
0.0019531250,
0.0029296875,
0.0019531250,
0.0019531250,
0.0019531250,
0.0029296875,
0.0029296875,
0.0019531250,
0.0029296875,
0.0019531250,
0.0039062500,
0.0019531250,
0.0029296875,
0.0058593750,
0.0068359375,
0.0078125000,
0.0048828125,
0.0068359375,
0.0068359375,
0.0078125000,
0.0048828125,
0.0058593750,
0.0078125000,
0.0048828125,
0.0058593750,
0.0068359375,
0.0078125000,
0.0078125000,
0.0048828125,
0.0068359375,
0.0068359375,
0.0068359375,
0.0068359375,
0.0068359375,
0.0058593750,
0.0068359375,
0.0068359375,
0.0068359375,
0.0068359375,
0.0078125000,
0.0068359375,
0.0068359375,
0.0068359375,
0.0068359375,
0.0058593750,
0.0068359375,
0.0078125000,
0.0068359375,
0.0068359375,
0.0068359375,
0.0078125000,
0.0058593750,
0.0048828125,
0.0068359375,
0.0048828125,
0.0058593750,
0.0058593750,
0.0058593750,
0.0048828125,
0.0048828125,
0.0058593750,
0.0058593750,
0.0058593750,
0.0058593750,
0.0048828125,
0.0058593750,
0.0058593750,
0.0048828125,
0.0058593750,
0.0058593750,
0.0048828125,
0.0068359375,
0.0048828125,
0.0058593750,
0.0048828125,
0.0039062500,
0.0058593750,
0.0048828125,
0.0039062500,
0.0048828125,
0.0058593750,
0.0048828125,
0.0029296875,
0.0048828125,
0.0048828125,
0.0039062500,
0.0058593750,
0.0048828125,
0.0058593750,
0.0058593750,
0.0058593750,
0.0058593750,
0.0058593750,
0.0058593750,
0.0058593750,
0.0078125000,
0.0068359375,
0.0058593750,
0.0048828125,
0.0048828125,
0.0048828125,
0.0048828125,
0.0048828125,
0.0078125000,
0.0048828125,
0.0048828125,
0.0058593750,
0.0078125000,
0.0068359375,
0.0078125000,
0.0068359375,
0.0068359375,
0.0078125000,
0.0068359375,
0.0068359375,
0.0039062500,
0.0058593750,
0.0058593750,
0.0048828125,
0.0039062500,
0.0039062500,
0.0039062500,
0.0048828125,
0.0048828125,
0.0058593750,
0.0039062500,
0.0126953125,
0.0136718750,
0.0126953125,
0.0136718750,
0.0117187500,
0.0136718750,
0.0117187500,
0.0126953125,
0.0136718750,
0.0146484375,
0.0156250000,
0.0146484375,
0.0166015625,
0.0136718750,
0.0156250000,
0.0156250000,
0.0166015625,
0.0156250000,
0.0136718750,
0.0273437500,
0.0283203125,
0.0292968750,
0.0292968750,
0.0312500000,
0.0292968750,
0.0302734375,
0.0312500000,
0.0332031250,
0.0322265625,
0.0351562500,
0.0341796875,
0.0341796875,
0.0371093750,
0.0351562500,
0.0351562500,
0.0361328125,
0.0380859375,
0.0390625000,
0.0693359375,
0.0673828125,
0.0693359375,
0.0712890625,
0.0732421875,
0.0751953125,
0.0742187500,
0.0751953125,
0.0732421875,
0.0771484375,
0.0791015625,
0.0791015625,
0.0800781250,
0.0800781250,
0.0830078125,
0.0849609375,
0.0849609375,
0.0878906250,
0.0908203125,
0.1855468750,
0.1855468750,
0.1884765625,
0.1855468750,
0.1884765625,
0.1923828125,
0.1923828125,
0.1943359375,
0.1953125000,
0.1953125000,
0.1972656250,
0.1972656250,
0.1972656250,
0.2001953125,
0.2021484375,
0.2031250000,
0.2050781250,
0.2080078125,
0.2089843750,
0.2587890625,
0.2587890625,
0.2597656250,
0.2597656250,
0.2607421875,
0.2636718750,
0.2646484375,
0.2685546875,
0.2695312500,
0.2695312500,
0.2714843750,
0.2724609375,
0.2744140625,
0.2763671875,
0.2753906250,
0.2773437500,
0.2802734375,
0.2812500000,
0.2822265625,
0.3251953125,
0.3261718750,
0.3242187500,
0.3261718750,
0.3271484375,
0.3281250000,
0.3281250000,
0.3300781250,
0.3291015625,
0.3330078125,
0.3349609375,
0.3339843750,
0.3359375000,
0.3378906250,
0.3378906250,
0.3378906250,
0.3417968750,
0.3398437500,
0.3720703125,
0.3720703125,
0.3730468750,
0.3750000000,
0.3779296875,
0.3769531250,
0.3769531250,
0.3769531250,
0.3789062500,
0.3779296875,
0.3779296875,
0.3808593750,
0.3828125000,
0.3818359375,
0.3857421875,
0.3857421875,
0.3857421875,
0.3876953125,
0.3876953125,
0.4326171875,
0.4335937500,
0.4316406250,
0.4335937500,
0.4335937500,
0.4316406250,
0.4375000000,
0.4365234375,
0.4375000000,
0.4375000000,
0.4375000000,
0.4394531250,
0.4404296875,
0.4404296875,
0.4384765625,
0.4404296875,
0.4384765625,
0.4423828125,
0.4414062500,
0.4550781250,
0.4521484375,
0.4541015625,
0.4541015625,
0.4541015625,
0.4570312500,
0.4560546875,
0.4550781250,
0.4580078125,
0.4570312500,
0.4580078125,
0.4580078125,
0.4589843750,
0.4599609375,
0.4599609375,
0.4589843750,
0.4599609375,
0.4609375000,
0.4599609375,
0.4677734375,
0.4677734375,
0.4667968750,
0.4687500000,
0.4687500000,
0.4658203125,
0.4687500000,
0.4677734375,
0.4687500000,
0.4687500000,
0.4697265625,
0.4687500000,
0.4677734375,
0.4687500000,
0.4707031250,
0.4697265625,
0.4687500000,
0.4716796875,
0.4716796875,
0.4794921875,
0.4775390625,
0.4785156250,
0.4775390625,
0.4785156250,
0.4765625000,
0.4775390625,
0.4765625000,
0.4785156250,
0.4785156250,
0.4785156250,
0.4785156250,
0.4775390625,
0.4785156250,
0.4804687500,
0.4785156250,
0.4804687500,
0.4785156250,
0.4765625000,
0.4648437500,
0.4687500000,
0.4677734375,
0.4658203125,
0.4638671875,
0.4628906250,
0.4628906250,
0.4619140625,
0.4619140625,
0.4619140625,
0.4609375000,
0.4599609375,
0.4589843750,
0.4570312500,
0.4570312500,
0.4550781250,
0.4541015625,
0.4541015625,
0.4531250000,
0.4160156250,
0.4111328125,
0.4101562500,
0.4091796875,
0.4072265625,
0.4072265625,
0.4052734375,
0.4033203125,
0.4013671875,
0.4023437500,
0.4013671875,
0.4003906250,
0.3984375000,
0.3964843750,
0.3955078125,
0.3964843750,
0.3925781250,
0.3925781250,
0.3906250000,
0.3339843750,
0.3349609375,
0.3300781250,
0.3300781250,
0.3261718750,
0.3232421875,
0.3212890625,
0.3193359375,
0.3173828125,
0.3154296875,
0.3125000000,
0.3105468750,
0.3076171875,
0.3076171875,
0.3056640625,
0.3037109375,
0.2998046875,
0.2998046875,
0.2939453125,
0.1679687500,
0.1679687500,
0.1650390625,
0.1650390625,
0.1621093750,
0.1591796875,
0.1582031250,
0.1572265625,
0.1552734375,
0.1542968750,
0.1523437500,
0.1503906250,
0.1474609375,
0.1474609375,
0.1474609375,
0.1455078125,
0.1416015625,
0.1406250000,
0.0976562500,
0.0947265625,
0.0966796875,
0.0927734375,
0.0927734375,
0.0908203125,
0.0917968750,
0.0917968750,
0.0898437500,
0.0878906250,
0.0849609375,
0.0849609375,
0.0820312500,
0.0820312500,
0.0839843750,
0.0839843750,
0.0830078125,
0.0839843750,
0.0810546875,
0.0576171875
};


const double filtersTest_ExpectedOutputValues[] = {
0.000781
, 0.000625
, 0.000500
, 0.000400
, 0.000320
, 0.000256
, 0.001767
, 0.000633
, 0.001287
, 0.000249
, 0.000199
, 0.000940
, -0.000029
, -0.000023
, -0.000019
, 0.000766
, 0.000613
, -0.000291
, 0.000549
, -0.000342
, 0.001289
, -0.000532
, 0.000356
, 0.002629
, 0.002884
, 0.003089
, 0.000127
, 0.001664
, 0.001331
, 0.001846
, -0.000867
, 0.000088
, 0.001633
, -0.001038
, -0.000049
, 0.000742
, 0.001375
, 0.001100
, -0.001464
, 0.000392
, 0.000313
, 0.000251
, 0.000200
, 0.000160
, -0.000653
, 0.000259
, 0.000207
, 0.000166
, 0.000133
, 0.000887
, -0.000071
, -0.000057
, -0.000046
, -0.000037
, -0.000811
, 0.000133
, 0.000888
, -0.000071
, -0.000057
, -0.000046
, 0.000745
, -0.000967
, -0.001555
, 0.000319
, -0.001307
, -0.000265
, -0.000212
, -0.000169
, -0.000917
, -0.000733
, 0.000195
, 0.000156
, 0.000124
, 0.000100
, -0.000702
, 0.000220
, 0.000176
, -0.000640
, 0.000269
, 0.000215
, -0.000609
, 0.001075
, -0.000702
, 0.000219
, -0.000606
, -0.001266
, 0.000550
, -0.000341
, -0.001054
, -0.000062
, 0.000731
, -0.000196
, -0.001719
, 0.000187
, 0.000150
, -0.000662
, 0.001033
, 0.000045
, 0.000818
, 0.000654
, 0.000523
, 0.000419
, 0.000335
, 0.000268
, 0.000214
, 0.001734
, 0.000606
, -0.000297
, -0.001018
, -0.000815
, -0.000652
, -0.000521
, -0.000417
, 0.002010
, -0.000736
, -0.000589
, 0.000310
, 0.001811
, 0.000667
, 0.001315
, 0.000271
, 0.000217
, 0.000955
, -0.000018
, -0.000014
, -0.002355
, -0.000321
, -0.000257
, -0.000987
, -0.001571
, -0.001257
, -0.001005
, -0.000023
, -0.000018
, 0.000767
, -0.000949
, 0.006272
, 0.005799
, 0.003858
, 0.003867
, 0.001531
, 0.002788
, 0.000668
, 0.001315
, 0.001834
, 0.002248
, 0.002580
, 0.001283
, 0.002589
, -0.000273
, 0.001344
, 0.001075
, 0.001642
, 0.000532
, -0.001137
, 0.010028
, 0.008804
, 0.007824
, 0.006259
, 0.006570
, 0.003693
, 0.003736
, 0.003770
, 0.004579
, 0.002882
, 0.004649
, 0.002938
, 0.002350
, 0.004224
, 0.001817
, 0.001453
, 0.001944
, 0.003118
, 0.003275
, 0.026839
, 0.019909
, 0.017489
, 0.015554
, 0.014006
, 0.012767
, 0.009432
, 0.008327
, 0.005099
, 0.007204
, 0.007326
, 0.005861
, 0.005470
, 0.004376
, 0.005844
, 0.006238
, 0.004990
, 0.006336
, 0.007413
, 0.081711
, 0.065369
, 0.054639
, 0.041367
, 0.035438
, 0.031475
, 0.025180
, 0.021707
, 0.018147
, 0.014517
, 0.013176
, 0.010541
, 0.008433
, 0.009090
, 0.008835
, 0.007849
, 0.007842
, 0.008617
, 0.007675
, 0.045984
, 0.036787
, 0.030211
, 0.024169
, 0.020116
, 0.018437
, 0.015531
, 0.015549
, 0.013221
, 0.010577
, 0.010024
, 0.008800
, 0.008603
, 0.008445
, 0.005975
, 0.006342
, 0.007417
, 0.006715
, 0.006153
, 0.039298
, 0.032219
, 0.024213
, 0.020933
, 0.017528
, 0.014803
, 0.011843
, 0.011037
, 0.008048
, 0.009563
, 0.009213
, 0.006589
, 0.006834
, 0.007030
, 0.005624
, 0.004499
, 0.006724
, 0.003817
, 0.028835
, 0.023068
, 0.019235
, 0.016951
, 0.015904
, 0.011942
, 0.009554
, 0.007643
, 0.007677
, 0.005360
, 0.004288
, 0.005774
, 0.006182
, 0.004164
, 0.006456
, 0.005165
, 0.004132
, 0.004868
, 0.003895
, 0.039053
, 0.032024
, 0.024057
, 0.020808
, 0.016646
, 0.011754
, 0.014091
, 0.010492
, 0.009175
, 0.007340
, 0.005872
, 0.006260
, 0.005789
, 0.004631
, 0.002143
, 0.003277
, 0.001059
, 0.003972
, 0.002396
, 0.012855
, 0.007940
, 0.007914
, 0.006332
, 0.005065
, 0.006396
, 0.004335
, 0.002687
, 0.004493
, 0.002814
, 0.003032
, 0.002426
, 0.002722
, 0.002959
, 0.002367
, 0.001112
, 0.001671
, 0.002118
, 0.000913
, 0.006981
, 0.005584
, 0.003686
, 0.004512
, 0.003609
, 0.000544
, 0.002779
, 0.001442
, 0.001935
, 0.001548
, 0.002019
, 0.000834
, -0.000114
, 0.000690
, 0.002115
, 0.000910
, -0.000053
, 0.002301
, 0.001841
, 0.007723
, 0.004616
, 0.004474
, 0.002798
, 0.003020
, 0.000853
, 0.001464
, 0.000390
, 0.001874
, 0.001499
, 0.001200
, 0.000960
, -0.000014
, 0.000770
, 0.002179
, 0.000181
, 0.001707
, -0.000197
, -0.001720
, -0.010751
, -0.005476
, -0.005162
, -0.005692
, -0.006116
, -0.005674
, -0.004539
, -0.004413
, -0.003530
, -0.002824
, -0.003041
, -0.003214
, -0.003352
, -0.004244
, -0.003395
, -0.004279
, -0.004204
, -0.003363
, -0.003472
, -0.032465
, -0.029878
, -0.024684
, -0.020528
, -0.017985
, -0.014388
, -0.013073
, -0.012021
, -0.011179
, -0.008162
, -0.007311
, -0.006630
, -0.006867
, -0.007056
, -0.006426
, -0.004359
, -0.006613
, -0.005290
, -0.005795
, -0.049948
, -0.039177
, -0.035248
, -0.028198
, -0.025684
, -0.022891
, -0.019875
, -0.017463
, -0.015533
, -0.013989
, -0.013535
, -0.012390
, -0.012256
, -0.009805
, -0.009406
, -0.009088
, -0.010395
, -0.008316
, -0.011340
, -0.109853
, -0.087883
, -0.072650
, -0.058120
, -0.048840
, -0.041416
, -0.033914
, -0.027912
, -0.023892
, -0.019895
, -0.017479
, -0.015545
, -0.014780
, -0.011824
, -0.009459
, -0.009130
, -0.010429
, -0.009124
, -0.041674
, -0.035683
, -0.026984
, -0.024712
, -0.019770
, -0.017378
, -0.013121
, -0.010497
, -0.009960
, -0.009531
, -0.009968
, -0.007975
, -0.008723
, -0.006979
, -0.004021
, -0.003216
, -0.003354
, -0.001902
, -0.003866
, -0.021842
};

/**
 * Unit test for the lowpass/highpass filters.
 * 
 * @return [description]
 */
bool filtersTest_checkPreFilters() {
	double _outputValue = 0;
	double _inputValue = 0;
	float lowPassFilterConstant = 0;//0.8;
	float highPassFilterConstant = 0.8;
	
	for (int i = 1; i < sizeof(filtersTest_Values) / sizeof(filtersTest_Values[0]); i++) {
		double val = filtersTest_Values[i];
	
		double lastOutputValue = _outputValue;
		double lastInputValue = _inputValue;

		//save cur raw val
		_inputValue = val;
		_outputValue = val;

		if (lowPassFilterConstant > 0) {
			_outputValue = LOW_PASS_FILTER(lastOutputValue, _outputValue, lowPassFilterConstant);
			DEBUG_PRINT_NUMS("Low pass filter: ", val, _outputValue);
		}
		if (highPassFilterConstant > 0) {
			_outputValue = HIGH_PASS_FILTER(lastOutputValue, lastInputValue, _outputValue, highPassFilterConstant);
			DEBUG_PRINT_NUMS("High pass filter: ", val, _outputValue);
		}
	}


	return false;
}


#endif